{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react_bgn\\\\Movie_db\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./components/loader.module.css\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-b40c1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n      const data = await response.json();\n      let loadMovies = [];\n      for (const key in data) {\n        loadMovies.push({\n          id: key,\n          title: data[key].title,\n          openingTitle: data.openingTitle,\n          releaseDate: data.releaseDate\n        });\n      }\n      // const renameMovieVariables = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      setMovies(renameMovieVariables);\n      // console.log(data.results);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-http-b40c1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: \"Some Dummy Movie\",\n  //     openingText: \"This is the opening text of the movie\",\n  //     releaseDate: \"2021-05-18\",\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"Some Dummy Movie 2\",\n  //     openingText: \"This is the second opening text of the movie\",\n  //     releaseDate: \"2021-05-19\",\n  //   },\n  // ];\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this), !isLoading && movies.length == 0 && !error && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"no content yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 56\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","classes","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadMovies","key","push","id","title","openingTitle","releaseDate","renameMovieVariables","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","length","loader"],"sources":["C:/projects/react_bgn/Movie_db/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./components/loader.module.css\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-b40c1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n      const data = await response.json();\n\n      let loadMovies = [];\n\n      for (const key in data) {\n        loadMovies.push({\n          id: key,\n          title: data[key].title,\n          openingTitle: data.openingTitle,\n          releaseDate: data.releaseDate,\n        });\n      }\n      // const renameMovieVariables = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      setMovies(renameMovieVariables);\n      // console.log(data.results);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://react-http-b40c1-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/JSON\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  }\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: \"Some Dummy Movie\",\n  //     openingText: \"This is the opening text of the movie\",\n  //     releaseDate: \"2021-05-18\",\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"Some Dummy Movie 2\",\n  //     openingText: \"This is the second opening text of the movie\",\n  //     releaseDate: \"2021-05-19\",\n  //   },\n  // ];\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movies} />}\n        {!isLoading && movies.length == 0 && !error && <h3>no content yet</h3>}\n        {isLoading && <div className={classes.loader}></div>}\n        {!isLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}